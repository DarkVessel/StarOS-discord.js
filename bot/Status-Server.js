try {
  const { RichEmbed } = require("discord.js")
  var os = require("os");
  bot.on("ready", async () => {
    bot.setInterval(async () => {
      function ostype() {
        var sysName = os.type();
        return sysName === "Linux"
          ? "Linux"
          : sysName === "Darwin"
          ? "macOS"
          : sysName === "Windows_NT"
          ? "Windows"
          : `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è (${os.platform()})`;
      }
      function formatSize(length) {
        var i = 0,
          type = ["–±", "–ö–±", "–ú–±", "–ì–±", "–¢–±", "–ü–±"];
        while ((length / 1000) | 0 && i < type.length - 1) {
          length /= 1024;
          i++;
        }
        return length.toFixed(2) + " " + type[i];
      }
      function getNormalCount(number, one, two, five) {
        number = Math.abs(number);
        number %= 100;
        if (number >= 5 && number <= 20) {
          return five;
        }
        number %= 10;
        if (number == 1) {
          return one;
        }
        if (number >= 2 && number <= 4) {
          return two;
        }
        return five;
      }
      var sec = os.uptime();
      var min = sec / 60;
      var hour = min / 60;

      var normalDay = `${Math.floor(hour / 24)} ${getNormalCount(
        Math.floor(hour / 24),
        "–¥–µ–Ω—å",
        "–¥–Ω—è",
        "–¥–Ω–µ–π"
      )}`;
      var normalHour = `${Math.floor(hour % 24)} ${getNormalCount(
        Math.floor(hour % 24),
        "—á–∞—Å",
        "—á–∞—Å–∞",
        "—á–∞—Å–æ–≤"
      )}`;
      var normalMinutes = `${Math.floor(min % 60)} ${getNormalCount(
        Math.floor(min % 60),
        "–º–∏–Ω—É—Ç–∞",
        "–º–∏–Ω—É—Ç—ã",
        "–º–∏–Ω—É—Ç"
      )}`;
      var normalSeconds = `${Math.floor(sec % 60)} ${getNormalCount(
        Math.floor(sec % 60),
        "—Å–µ–∫—É–Ω–¥–∞",
        "—Å–µ–∫—É–Ω–¥—ã",
        "—Å–µ–∫—É–Ω–¥"
      )}`;
      var sysuptime = `${normalDay}, ${normalHour}, ${normalMinutes}, ${normalSeconds}`;

      module.exports.getOSType = ostype();
      module.exports.getOSArch = os.arch();
      module.exports.getOSHostName = os.hostname();
      module.exports.getOSMem = `${formatSize(
        os.totalmem() - os.freemem()
      )}/${formatSize(os.totalmem())} (–°–≤–æ–±–æ–¥–Ω–æ: ${formatSize(os.freemem())})`;
      module.exports.getOSUptime = sysuptime;
      const verifilv = [
        "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.",
        "–ù–∏–∑–∫–∞—è.",
        "–°—Ä–µ–¥–Ω—è—è.",
        "–í—ã—Å–æ–∫–∞—è.",
        "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è."
      ];
      let embed = new RichEmbed()
        .setColor(colors)
        .setAuthor(`üì∫ | –ú–æ–Ω–∏—Ç–æ—Ä`)
        .addField(
          `üë• | **–°—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**`,
          `> –ë–æ—Ç–æ–≤: **${
            bot.guilds
              .get(serverID)
              .members.filter(mem => mem.user.bot === true).size
          }**\n> –í —Å–µ—Ç–∏: **${
            bot.guilds.get(serverID).presences.size
          }**\n> –ù–µ –≤ —Å–µ—Ç–∏: **${bot.guilds.get(serverID).memberCount -
            bot.guilds.get(serverID).presences.size}**\n> –ù–µ –∞–∫—Ç–∏–≤–µ–Ω: **${
            bot.guilds
              .get(serverID)
              .members.filter(member => member.presence.status === "idle").size
          }**\n> –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å: **${
            bot.guilds
              .get(serverID)
              .members.filter(member => member.presence.status === "dnd").size
          }**\n> –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **${bot.guilds.get(serverID).memberCount}**`
        )
        .addField("üåü | **–†–æ–ª–µ–π**", bot.guilds.get(serverID).roles.size, true)
        .addField("üéâ | **–≠–º–æ–¥–∂–∏**", bot.guilds.get(serverID).emojis.size, true)
        .addField(
          "üî∞ | **–ó–∞—â–∏—Ç–∞**",
          verifilv[bot.guilds.get(serverID).verificationLevel],
          true
        )
        .addField(
          "<:love:615151311796830208> | **–°—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–æ–≤**",
          `> –ì–æ–ª–æ—Å–æ–≤–æ–π –æ–Ω–ª–∞–π–Ω: **${
            bot.guilds.get(serverID).members.filter(m => m.voiceChannel).size
          }**\n> –¢–µ–∫—Å—Ç–æ–≤—ã—Ö: **${
            bot.guilds.get(serverID).channels.filter(c => c.type == "text").size
          }**\n> –ì–æ–ª–æ—Å–æ–≤—ã—Ö: **${
            bot.guilds.get(serverID).channels.filter(c => c.type == "voice")
              .size
          }**`
        )
        .addField(
          "üì∫ | **–ú–æ–Ω–∏—Ç–æ—Ä –ë–æ—Ç–∞**",
          `User: ${os.hostname()}\n–°–∏—Å—Ç–µ–º–∞: ${ostype()}\n–ó–∞–¥–µ—Ä–∂–∫–∞ API: \`${Math.round(
            bot.ping
          )} –º—Å\`\n–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã: ${os.arch()}\n–û–ó–£: ${formatSize(
            os.totalmem() - os.freemem()
          )}/${formatSize(os.totalmem())} (–°–≤–æ–±–æ–¥–Ω–æ: ${formatSize(
            os.freemem()
          )})\n–ê–ø—Ç–∞–π–º —Å–∏—Å—Ç–µ–º—ã: ${sysuptime}.`
        )
        .setFooter("–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É...");
      bot.channels
        .get(config.ChannelStatusID)
        .fetchMessage(config.MessageStatusID)
        .then(m => m.edit(embed));
    }, 30000);
  });
} catch (err) {
  console.log(err.stack);
}
