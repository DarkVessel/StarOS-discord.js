const { Discord, RichEmbed, Client} = require('discord.js')
const fs = require('fs')
const bot = new Client()
const env = require('dotenv').config();
const lang = require('./lang.json')
const time = require('./time.json')
bot.on('ready', async () => {
    console.log(`StarOS BOT | v1.0`);
    console.info(`–ü–æ–¥–∫–ª—é—á—ë–Ω –∫ –∞–∫–∫–∞—É–Ω—Ç—É ${bot.user.tag} | ${bot.user.id}`)
    bot.generateInvite(["ADMINISTRATOR"]).then(link => {
        console.log(`–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –±–æ—Ç–∞: ${link}`);
    });
   bot.setInterval(() => {
      var os = require('os');

      function ostype() {
          var sysName = os.type();
          return (sysName === "Linux") ? "Linux" :
              (sysName === "Darwin") ? "macOS" :
                  (sysName === "Windows_NT") ? "Windows" :
                      `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è (${os.platform()})`;
      }

      function formatSize(length) {
          var i = 0, type = ['–±', '–ö–±', '–ú–±', '–ì–±', '–¢–±', '–ü–±'];
          while ((length / 1000 | 0) && i < type.length - 1) {
              length /= 1024;
              i++;
          }
          return length.toFixed(2) + ' ' + type[i];
      }

      function getNormalCount(number, one, two, five) {
          number = Math.abs(number);
          number %= 100;
          if (number >= 5 && number <= 20) {
              return five;
          }
          number %= 10;
          if (number == 1) {
              return one;
          }
          if (number >= 2 && number <= 4) {
              return two;
          }
          return five;
      }

      var sec = os.uptime();
      var min = sec / 60;
      var hour = min / 60;

      var normalDay = `${Math.floor(hour / 24)} ${getNormalCount(Math.floor(hour / 24), "–¥–µ–Ω—å", "–¥–Ω—è", "–¥–Ω–µ–π")}`;
      var normalHour = `${Math.floor(hour % 24)} ${getNormalCount(Math.floor(hour % 24), "—á–∞—Å", "—á–∞—Å–∞", "—á–∞—Å–æ–≤")}`;
      var normalMinutes = `${Math.floor(min % 60)} ${getNormalCount(Math.floor(min % 60), "–º–∏–Ω—É—Ç–∞", "–º–∏–Ω—É—Ç—ã", "–º–∏–Ω—É—Ç")}`;
      var normalSeconds = `${Math.floor(sec % 60)} ${getNormalCount(Math.floor(sec % 60), "—Å–µ–∫—É–Ω–¥–∞", "—Å–µ–∫—É–Ω–¥—ã", "—Å–µ–∫—É–Ω–¥")}`;
      var sysuptime = `${normalDay}, ${normalHour}, ${normalMinutes}, ${normalSeconds}`;

      module.exports.getOSType = ostype();
      module.exports.getOSArch = os.arch();
      module.exports.getOSHostName = os.hostname();
      module.exports.getOSMem = `${formatSize(os.totalmem() - os.freemem())}/${formatSize(os.totalmem())} (–°–≤–æ–±–æ–¥–Ω–æ: ${formatSize(os.freemem())})`;
      module.exports.getOSUptime = sysuptime;
      var –°–æ–æ–±—â–µ–Ω–∏–π = time.message
      const verifilv = ['–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.', '–ù–∏–∑–∫–∞—è.', '–°—Ä–µ–¥–Ω—è—è.', '–í—ã—Å–æ–∫–∞—è.', '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è.']
      bot.guilds.get(`578530834806734849`).members.forEach(member => {
          let fsd = parseInt(Date.now() + (60 * 1000))
          let time2 = time.status
          if (Date.now() >= time2) {
            time.status = fsd
            fs.writeFile('./time.json', JSON.stringify(time), (err) => {
                if (err) console.log(err);
            });
              let embed = new RichEmbed()
                  .setColor("RANDOM")
                  .setAuthor(`üì∫ | –ú–æ–Ω–∏—Ç–æ—Ä`)
                  .addField(`üë• | **–°—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**`, `> –ë–æ—Ç–æ–≤: **${member.guild.members.filter(mem => mem.user.bot === true).size}**\n> –í —Å–µ—Ç–∏: **${member.guild.presences.size}**\n> –ù–µ –≤ —Å–µ—Ç–∏: **${member.guild.memberCount - member.guild.presences.size}**\n> –ù–µ –∞–∫—Ç–∏–≤–µ–Ω: **${member.guild.members.filter(member => member.presence.status === 'idle').size}**\n> –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å: **${member.guild.members.filter(member => member.presence.status === 'dnd').size}**\n> –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **${member.guild.memberCount}**`)
                  .addField('üåü | **–†–æ–ª–µ–π**', member.guild.roles.size, true)
                  .addField('üéâ | **–≠–º–æ–¥–∂–∏**', member.guild.emojis.size, true)
                  .addField('üî∞ | **–ó–∞—â–∏—Ç–∞**', verifilv[member.guild.verificationLevel], true)
                  .addField('<:love:615151311796830208> | **–°—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–æ–≤**', `> –ì–æ–ª–æ—Å–æ–≤–æ–π –æ–Ω–ª–∞–π–Ω: **${member.guild.members.filter(m => m.voiceChannel).size}**\n> –°–æ–æ–±—â–µ–Ω–∏–π: **${–°–æ–æ–±—â–µ–Ω–∏–π}**\n> –¢–µ–∫—Å—Ç–æ–≤—ã—Ö: **${member.guild.channels.filter(c => c.type == 'text').size}**\n> –ì–æ–ª–æ—Å–æ–≤—ã—Ö: **${member.guild.channels.filter(c => c.type == 'voice').size}**`)
                  .addField('üì∫ | **–ú–æ–Ω–∏—Ç–æ—Ä –ë–æ—Ç–∞**', `User: ${os.hostname()}\n–°–∏—Å—Ç–µ–º–∞: ${ostype()}\n–ó–∞–¥–µ—Ä–∂–∫–∞ API: \`${Math.round(bot.ping)} –º—Å\`\n–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã: ${os.arch()}\n–û–ó–£: ${formatSize(os.totalmem() - os.freemem())}/${formatSize(os.totalmem())} (–°–≤–æ–±–æ–¥–Ω–æ: ${formatSize(os.freemem())})\n–ê–ø—Ç–∞–π–º —Å–∏—Å—Ç–µ–º—ã: ${sysuptime}.`)
                  .setFooter('–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É...')
              bot.channels.get("578535881145843717").fetchMessage('615891758441693194').then(m => m.edit(embed))
          }
    }, 5000)
  })
})
bot.on('message', async message => {
  if(message.content === '!test') {
    if(message.author.id !== '517331770656686080') return
    let fsd = parseInt(Date.now() + (60 * 1000))
    time.status = fsd
    time.message = '???'
    fs.writeFile('./time.json', JSON.stringify(time), (err) => {
        if (err) console.log(err);
    });
  }
  let mesage = time.message
  time.message = mesage + 1
  fs.writeFile('./time.json', JSON.stringify(time), (err) => {
      if (err) console.log(err);
  });
})
bot.on('guildMemberAdd', async member => {
  member.send('–ù–∞–∂–º–∏—Ç–µ ‚ù§ –µ—Å–ª–∏ –≤—ã –†—É—Å—Å–∫–∏–π.\nPress üíõ if you are English.').then(msg => {
      msg.react('‚ù§').then(r => {
        msg.react('üíõ')
        const a = (reaction, user) => reaction.emoji.name === '‚ù§' && user.id === member.id;
        const b = (reaction, user) => reaction.emoji.name === 'üíõ' && user.id === member.id;
        const d = msg.createReactionCollector(a);
        const z = msg.createReactionCollector(b);
        d.on('collect', r => {
          bot.channels.get('615891476446183456').send(`${member} –ü—Ä–∏—à—ë–ª üòÉ`)
            let roleS = member.guild.roles.find(r => r.id === '615518783620251670');
            if (!member.roles.has(roleS.id)) {
                member.addRole(roleS);
            }
            msg.edit('‚ù§ | –í—ã —É—Å–ø–µ—à–Ω–æ —É–∫–∞–∑–∞–ª–∏ —Å–≤–æ–π —è–∑—ã–∫!').then(msg => {
              msg.reactions.forEach(e => e.remove(bot.user.id))
                d.stop()
                z.stop()
            })
            if(!lang[member.id]) lang[member.id] = { ru: false }
            if(!lang[member.id]) lang[member.id] = { en: false }
            fs.writeFile('./lang.json', JSON.stringify(lang), (err) => {
                if (err) console.log(err);
              });
            lang[member.id].ru = true
            lang[member.id].en = false
            fs.writeFile('./lang.json', JSON.stringify(lang), (err) => {
                if (err) console.log(err);
              });
               })
        z.on('collect', r => {
          bot.channels.get('615891476446183456').send(`${member} Has come üòÉ`)
            let roleS = member.guild.roles.find(r => r.id === '615867385328697349');
            if (!member.roles.has(roleS.id)) {
                member.addRole(roleS);
            }
            msg.edit("üíõ | You have successfully entered your language!").then(msg => {
                msg.reactions.forEach(e => e.remove(bot.user.id))
                d.stop()
                z.stop()
            })
            if(!lang[member.id]) lang[member.id] = { ru: false }
            if(!lang[member.id]) lang[member.id] = { en: false }
            fs.writeFile('./lang.json', JSON.stringify(lang), (err) => {
                if (err) console.log(err);
              });
            lang[member.id].ru = false
            lang[member.id].en = true
            fs.writeFile('./lang.json', JSON.stringify(lang), (err) => {
                if (err) console.log(err);
              });
            })
      })
    })
})
bot.on('guildMemberRemove', async member => {
  if(!lang[member.id]) return
delete lang[member.id]
fs.writeFile('./lang.json', JSON.stringify(lang), (err) => {
    if (err) console.log(err);
  });
})
bot.on('message', async message => {
  if(message.channel.id === '615595315524796436') {
    await message.react('615151311796830208')
    await message.react('615151421117169664')
  } else return
})
bot.login(process.env.TOKEN)
