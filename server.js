const http = require('http'),
    express = require('express'),
    app = express();

app.get("/", (request, response) => {
    console.log(Date.now() + " –ø–∏–Ω–≥ –ø–æ–ª—É—á–µ–Ω");
    response.sendStatus(200);
});

app.listen(process.env.PORT);
setInterval(() => {
    http.get(`http://${process.env.PROJECT_DOMAIN}.glitch.me/`);
}, 280000);
const { Discord, RichEmbed, Client} = require('discord.js') //–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API –¥–∏—Å–∫–æ—Ä–¥–∞.
const fs = require('fs') //–§–∞–π–ª–æ–≤–∞—è –°–∏—Å—Ç–µ–º–∞.
const bot = new Client() //–ù–∞—à –±–æ—Ç.
const time = require('./time.json')
const commands = new Map(); //–ö–æ–º–∞–Ω–¥—ã.
const env = require('dotenv').config(); //–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å .env —Ñ–∞–π–ª–∞–º–∏.
const { host, user, password, database } = process.env; //–í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è "host", "user", "password", "database" –∏–∑ —Ñ–∞–π–ª–∞ .env
const mysql = require('mysql2') //–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π MySQL
const con = mysql.createConnection({ host, user, password, database}); //–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ.
const config = require('./botconfig.json') //–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É "botconfig.json"
const { prefix, serverID, botOwnerID, ChannelWelcomeID, ChannelReactionID, react1, react2, RoleRuID, RoleEnID, MaxLevel, ChannelLevelID, RoleLevel5ID, RoleLevel10ID, RoleLevel15ID, RoleLevel20ID, RoleLevel25ID, RoleLevel30ID, RoleLevel35ID, RoleLevel40ID, RoleLevel50ID, RoleLevel65ID, ChannelStatusID, MessageStatusID, Role–£–∫ID } = config //–í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ "botconfig.json"
fs.readdirSync('./cmds/').filter(file => file.endsWith('.js')).forEach(file => { //–ó–∞–≥—Ä—É–∑—á–∏–∫ –∫–æ–º–∞–Ω–¥.
    let props = require(`./cmds/${file}`);
    commands.set(require(`./cmds/${file}`).command.name, require(`./cmds/${file}`));
    console.log(`[COMMANDS] –ó–∞–≥—Ä—É–∂–µ–Ω ${file}!`);
})
bot.on('message', async message => { //–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥.
    let messageArray = message.content.split(" ");
    let command = messageArray[0].toLowerCase();
    let args = messageArray.slice(1);
    if (!message.content.startsWith(prefix)) return;
    let cmd = commands.get(command.slice(prefix.length));
    if (cmd) cmd.run(bot, message, args);
});
bot.on('ready', async () => {
    console.log(`StarOS BOT | v1.0`);
    console.info(`–ü–æ–¥–∫–ª—é—á—ë–Ω –∫ –∞–∫–∫–∞—É–Ω—Ç—É ${bot.user.tag} | ${bot.user.id}`)
    bot.generateInvite(["ADMINISTRATOR"]).then(link => {
        console.log(`–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –±–æ—Ç–∞: ${link}`);
    });
   bot.setInterval(() => {
      var os = require('os');
      function ostype() {
          var sysName = os.type();
          return (sysName === "Linux") ? "Linux" :
              (sysName === "Darwin") ? "macOS" :
                  (sysName === "Windows_NT") ? "Windows" :
                      `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è (${os.platform()})`;
      }
      function formatSize(length) {
          var i = 0, type = ['–±', '–ö–±', '–ú–±', '–ì–±', '–¢–±', '–ü–±'];
          while ((length / 1000 | 0) && i < type.length - 1) {
              length /= 1024;
              i++;
          }
          return length.toFixed(2) + ' ' + type[i];
      }
      function getNormalCount(number, one, two, five) {
          number = Math.abs(number);
          number %= 100;
          if (number >= 5 && number <= 20) {
              return five;
          }
          number %= 10;
          if (number == 1) {
              return one;
          }
          if (number >= 2 && number <= 4) {
              return two;
          }
          return five;
      }
      var sec = os.uptime();
      var min = sec / 60;
      var hour = min / 60;

      var normalDay = `${Math.floor(hour / 24)} ${getNormalCount(Math.floor(hour / 24), "–¥–µ–Ω—å", "–¥–Ω—è", "–¥–Ω–µ–π")}`;
      var normalHour = `${Math.floor(hour % 24)} ${getNormalCount(Math.floor(hour % 24), "—á–∞—Å", "—á–∞—Å–∞", "—á–∞—Å–æ–≤")}`;
      var normalMinutes = `${Math.floor(min % 60)} ${getNormalCount(Math.floor(min % 60), "–º–∏–Ω—É—Ç–∞", "–º–∏–Ω—É—Ç—ã", "–º–∏–Ω—É—Ç")}`;
      var normalSeconds = `${Math.floor(sec % 60)} ${getNormalCount(Math.floor(sec % 60), "—Å–µ–∫—É–Ω–¥–∞", "—Å–µ–∫—É–Ω–¥—ã", "—Å–µ–∫—É–Ω–¥")}`;
      var sysuptime = `${normalDay}, ${normalHour}, ${normalMinutes}, ${normalSeconds}`;

      module.exports.getOSType = ostype();
      module.exports.getOSArch = os.arch();
      module.exports.getOSHostName = os.hostname();
      module.exports.getOSMem = `${formatSize(os.totalmem() - os.freemem())}/${formatSize(os.totalmem())} (–°–≤–æ–±–æ–¥–Ω–æ: ${formatSize(os.freemem())})`;
      module.exports.getOSUptime = sysuptime;
      var –°–æ–æ–±—â–µ–Ω–∏–π = time.message
      const verifilv = ['–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.', '–ù–∏–∑–∫–∞—è.', '–°—Ä–µ–¥–Ω—è—è.', '–í—ã—Å–æ–∫–∞—è.', '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è.']
      bot.guilds.get(serverID).members.forEach(member => {
          let fsd = parseInt(Date.now() + (60 * 1000))
          let time2 = time.status
          if (Date.now() >= time2) {
            time.status = fsd
            fs.writeFile('./time.json', JSON.stringify(time), (err) => {
                if (err) console.log(err);
            });
              let embed = new RichEmbed()
                  .setColor("RANDOM")
                  .setAuthor(`üì∫ | –ú–æ–Ω–∏—Ç–æ—Ä`)
                  .addField(`üë• | **–°—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**`, `> –ë–æ—Ç–æ–≤: **${member.guild.members.filter(mem => mem.user.bot === true).size}**\n> –í —Å–µ—Ç–∏: **${member.guild.presences.size}**\n> –ù–µ –≤ —Å–µ—Ç–∏: **${member.guild.memberCount - member.guild.presences.size}**\n> –ù–µ –∞–∫—Ç–∏–≤–µ–Ω: **${member.guild.members.filter(member => member.presence.status === 'idle').size}**\n> –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å: **${member.guild.members.filter(member => member.presence.status === 'dnd').size}**\n> –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: **${member.guild.memberCount}**`)
                  .addField('üåü | **–†–æ–ª–µ–π**', member.guild.roles.size, true)
                  .addField('üéâ | **–≠–º–æ–¥–∂–∏**', member.guild.emojis.size, true)
                  .addField('üî∞ | **–ó–∞—â–∏—Ç–∞**', verifilv[member.guild.verificationLevel], true)
                  .addField('<:love:615151311796830208> | **–°—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–æ–≤**', `> –ì–æ–ª–æ—Å–æ–≤–æ–π –æ–Ω–ª–∞–π–Ω: **${member.guild.members.filter(m => m.voiceChannel).size}**\n> –°–æ–æ–±—â–µ–Ω–∏–π: **${–°–æ–æ–±—â–µ–Ω–∏–π}**\n> –¢–µ–∫—Å—Ç–æ–≤—ã—Ö: **${member.guild.channels.filter(c => c.type == 'text').size}**\n> –ì–æ–ª–æ—Å–æ–≤—ã—Ö: **${member.guild.channels.filter(c => c.type == 'voice').size}**`)
                  .addField('üì∫ | **–ú–æ–Ω–∏—Ç–æ—Ä –ë–æ—Ç–∞**', `User: ${os.hostname()}\n–°–∏—Å—Ç–µ–º–∞: ${ostype()}\n–ó–∞–¥–µ—Ä–∂–∫–∞ API: \`${Math.round(bot.ping)} –º—Å\`\n–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã: ${os.arch()}\n–û–ó–£: ${formatSize(os.totalmem() - os.freemem())}/${formatSize(os.totalmem())} (–°–≤–æ–±–æ–¥–Ω–æ: ${formatSize(os.freemem())})\n–ê–ø—Ç–∞–π–º —Å–∏—Å—Ç–µ–º—ã: ${sysuptime}.`)
                  .setFooter('–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É...')
              bot.channels.get(ChannelStatusID).fetchMessage(MessageStatusID).then(m => m.edit(embed))
          }
    }, 5000)
  })
})
bot.on('message', async message => {
  if(message.content === '!test') {
    if(message.author.id !== botOwnerID) return
    let fsd = parseInt(Date.now() + (60 * 1000))
    time.status = fsd
    time.message = 0
    fs.writeFile('./time.json', JSON.stringify(time), (err) => {
        if (err) console.log(err);
    });
  }
  let mesage = time.message
  time.message = mesage + 1
  fs.writeFile('./time.json', JSON.stringify(time), (err) => {
      if (err) console.log(err);
  });
})
bot.on('guildMemberAdd', async member => { //–ü—Ä–∏ –≤—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
  member.send('–ù–∞–∂–º–∏—Ç–µ ‚ù§ –µ—Å–ª–∏ –≤—ã –†—É—Å—Å–∫–∏–π.\nPress üíõ if you are English.\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å üíö —è–∫—â–æ –≤–∏ –£–∫—Ä–∞—ó–Ω–µ—Ü—å.').then(msg => { //–°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
      msg.react('‚ù§').then(r => {
        msg.react('üíõ')
        msg.react('üíö')
        const a = (reaction, user) => reaction.emoji.name === '‚ù§' && user.id === member.id;
        const b = (reaction, user) => reaction.emoji.name === 'üíõ' && user.id === member.id;
        const g = (reaction, user) => reaction.emoji.name === 'üíö' && user.id === member.id;
        const d = msg.createReactionCollector(a); //–°–æ–∑–¥–∞—ë–º –∫–æ–ª–ª–µ–∫—Ç–æ—Ä.
        const z = msg.createReactionCollector(b);
        const l = msg.createReactionCollector(g);
        d.on('collect', r => {
          bot.channels.get(ChannelWelcomeID).send(`${member} –ü—Ä–∏—à—ë–ª üòÉ`)
            let roleS = member.guild.roles.find(r => r.id === RoleRuID);
            if (!member.roles.has(roleS.id)) {
                member.addRole(roleS);
            }
            msg.edit('‚ù§ | –í—ã —É—Å–ø–µ—à–Ω–æ —É–∫–∞–∑–∞–ª–∏ —Å–≤–æ–π —è–∑—ã–∫!').then(msg => {
              msg.reactions.forEach(e => e.remove(bot.user.id))
                d.stop()
                z.stop() //–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–ª–µ–∫—Ç–æ—Ä—ã.
            })
               })
        z.on('collect', r => {
          bot.channels.get(ChannelWelcomeID).send(`${member} Has come üòÉ`)
            let roleS = member.guild.roles.find(r => r.id === RoleEnID);
            if (!member.roles.has(roleS.id)) {
                member.addRole(roleS); //–í—ã–¥–∞—ë–º —Ä–æ–ª—å.
            }
            msg.edit("üíõ | You have successfully entered your language!").then(msg => {
                msg.reactions.forEach(e => e.remove(bot.user.id)) //–£–±–∏—Ä–∞–µ–º —Ä–µ–∞–∫—Ü–∏–∏ —É –±–æ—Ç–∞.
                d.stop()
                z.stop()
            })
            })
            l.on('collect', r => {
              bot.channels.get(ChannelWelcomeID).send(`${member} –ü—Ä–∏–π—à–æ–≤ üòÉ`)
              let roleS = member.guild.roles.find(r => r.id === Role–£–∫ID);
              if(!member.roles.has(roleS.id)) {
                  member.addRole(roleS); //–í—ã–¥–∞—ë–º —Ä–æ–ª—å.
              }
              msg.edit(`üíö | –í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∫–∞–∑–∞–ª–∏ —Å–≤–æ—é –º–æ–≤—É!`).then(msg => {
                msg.reactions.forEach(e => e.remove(bot.user.id)) //–£–±–∏—Ä–∞–µ–º —Ä–µ–∞–∫—Ü–∏–∏ —É –±–æ—Ç–∞.
                d.stop()
                z.stop()
              })
            })
      })
    })
})

bot.on('message', async message => {
  if(message.channel.id === ChannelReactionID) {
    await message.react(react1) //–°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏–∏.
    await message.react(react2)
  } else return
})
bot.on("message", async message => {
    if (message.author.bot) return
    if (message.channel.type == "dm") return;
    if(message.guild.id !== serverID) return
      if(message.author.id !== '517331770656686080' && message.author.id !== '550276764463792129' && message.author.id !== '571672504721211392' && message.author.id !== '601265391519662080' && message.author.id !== '599187428145627147' && message.author.id !== '575013947258699787' && message.author.id !== '344834720401719296') return
  if(['621725124567236658', '621725124567236658', '621725124567236658', '621725124567236658', '617417681657659436'].includes(message.channel.id)) return; //–í –∫–∞–∫–∏—Ö –∫–∞–Ω–∞–ª–∞—Ö –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å.
    con.query(`SELECT * FROM Levels WHERE ID = ${message.author.id}`, function (err, result) {
        if (result.length) return;
        con.query("INSERT INTO Levels (ID, Level, Xp, Maxs) VALUES  (?,?,?,?)", [message.author.id, 0, 0, 700], function (err, result) {
            if (err) {
                console.log(err);
            }
        });
    })
    con.query(`SELECT * FROM Levels WHERE ID = ${message.author.id}`, function (err, results) {
        if (err) console.log(err);
        const users = results;
        for (let i = 0; i < users.length; i++) {
            let level = users[i].Maxs
            let CurrentLevel = users[i].Level
            let CurrentXp = users[i].Xp
            if(CurrentLevel === MaxLevel) return
            if(CurrentLevel > MaxLevel) return
            con.query(`UPDATE Levels SET Xp = ${parseInt(CurrentXp) + parseInt(4)} WHERE ID = ${message.author.id}`, function (err, rows) {
                if (err) return console.log(err);
            });
            if(`${CurrentLevel + 1}` > 5) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel5ID);
              if(!message.member.roles.has(roleS.id)) {
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 10) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel10ID);
              if(!message.member.roles.has(roleS.id)) {
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 15) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel15ID);
              if(!message.member.roles.has(roleS.id)){
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 20) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel20ID);
              if(!message.member.roles.has(roleS.id)){
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 25) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel25ID);
              if(!message.member.roles.has(roleS.id)){
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 30) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel30ID);
              if(!message.member.roles.has(roleS.id)){
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 35) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel35ID);
              if(!message.member.roles.has(roleS.id)){
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 40) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel40ID);
              if(!message.member.roles.has(roleS.id)) {
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 50) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel50ID);
              if(!message.member.roles.has(roleS.id)) {
                message.member.addRole(roleS)
              }
            }
            if (level < CurrentXp) {
                con.query(`UPDATE Levels SET Level = ${parseInt(CurrentLevel) + parseInt(1)}, Xp = 0 WHERE ID = ${message.author.id}`, function (err, rows) {
                    if (err) return console.log(err);
                });
              if(CurrentLevel === 25) {
                if(level === 900) return
                con.query(`UPDATE Levels SET Maxs = 900 WHERE ID = ${message.author.id}`, function (err, rows) {
                    if (err) return console.log(err);
                });
              }
              if(CurrentLevel === 40) {
                if(level === 1250) return
                con.query(`UPDATE Levels SET Maxs = 1250 WHERE ID = ${message.author.id}`, function (err, rows) {
                      if (err) return console.log(err);
                });
              }
                if(`${CurrentLevel + 1}` === 5) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel5ID);
                  if(message.member.roles.has(roleS.id)) return
                    message.member.addRole(roleS)
                }
                if(`${CurrentLevel + 1}` == 10) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel10ID);
                  if(!message.member.roles.has(roleS.id)) {
                   message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 15) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel15ID);
                  if(!message.member.roles.has(roleS.id)){
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 20) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel20ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 25) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel25ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 30) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel30ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 35) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel35ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 40) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel40ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 50) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel50ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 65) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel65ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
              let languageRU = message.guild.roles.find(r => r.id === RoleRuID);
                let languageEN = message.guild.roles.find(r => r.id === RoleEnID);
                let language–£–ö = message.guild.roles.find(r => r.id === Role–£–∫ID);
                if(message.member.roles.has(Role–£–∫ID.id)) {
                        bot.channels.get(ChannelLevelID).send(`**${message.author} –æ—Ç—Ä–∏–º–∞–≤ ${CurrentLevel + 1} —Ä—ñ–≤–µ–Ω—å!**`)
                  return
                }
              if(message.member.roles.has(languageRU.id)) {
                      bot.channels.get(ChannelLevelID).send(`**${message.author} –ø–æ–ª—É—á–∏–ª ${CurrentLevel + 1} —É—Ä–æ–≤–µ–Ω—å!**`)
                return
              }
              if(message.member.roles.has(languageEN.id)) {
              bot.channels.get(ChannelLevelID).send(`**${message.author} got ${CurrentLevel + 1} level!**`)
                return
              }
            }
        }
    })
})
bot.on('message', async message => {
    if (message.author.bot) return
    if (message.channel.type == "dm") return;
    if(message.guild.id !== serverID) return
  if(['517331770656686080', '550276764463792129', '571672504721211392', '601265391519662080', '599187428145627147', '575013947258699787', '344834720401719296'].includes(message.author.id)) return;
  if(['621725124567236658', '621725124567236658', '621725124567236658', '621725124567236658', '617417681657659436'].includes(message.channel.id)) return;
    let addxp = Math.floor(Math.random() * 3) + 1
    con.query(`SELECT * FROM Levels WHERE ID = ${message.author.id}`, function (err, result) {
        if (result.length) return;
        con.query("INSERT INTO Levels (ID, Level, Xp, Maxs) VALUES  (?,?,?,?)", [message.author.id, 0, 0, 700], function (err, result) {
            if (err) {
                console.log(err);
            }
        });
    })
    con.query(`SELECT * FROM Levels WHERE ID = ${message.author.id}`, function (err, results) {
        if (err) console.log(err);
        const users = results;
        for (let i = 0; i < users.length; i++) {
            let level = users[i].Maxs
            let CurrentLevel = users[i].Level
            let CurrentXp = users[i].Xp
            if(CurrentLevel === 65) return
            if(CurrentLevel > 65) return
            con.query(`UPDATE Levels SET Xp = ${parseInt(CurrentXp) + parseInt(addxp)} WHERE ID = ${message.author.id}`, function (err, rows) {
                if (err) return console.log(err);
            });
            if(`${CurrentLevel + 1}` > 5) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel5ID);
              if(!message.member.roles.has(roleS.id)) {
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 10) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel10ID);
              if(!message.member.roles.has(roleS.id)) {
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 15) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel15ID);
              if(!message.member.roles.has(roleS.id)){
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 20) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel20ID);
              if(!message.member.roles.has(roleS.id)){
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 25) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel25ID);
              if(!message.member.roles.has(roleS.id)){
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 30) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel30ID);
              if(!message.member.roles.has(roleS.id)){
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 35) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel35ID);
              if(!message.member.roles.has(roleS.id)){
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 40) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel40ID);
              if(!message.member.roles.has(roleS.id)) {
                message.member.addRole(roleS)
              }
            }
            if(`${CurrentLevel + 1}` > 50) {
              let roleS = message.guild.roles.find(r => r.id === RoleLevel50ID);
              if(!message.member.roles.has(roleS.id)) {
                message.member.addRole(roleS)
              }
            }
            if (level < CurrentXp) {
              if(CurrentLevel === 25) {
                if(level === 900) return
                con.query(`UPDATE Levels SET Maxs = 900 WHERE ID = ${message.author.id}`, function (err, rows) {
                    if (err) return console.log(err);
                });
              }
              if(CurrentLevel === 40) {
                if(level === 1250) return
                con.query(`UPDATE Levels SET Maxs = 1250 WHERE ID = ${message.author.id}`, function (err, rows) {
                      if (err) return console.log(err);
                });
              }
                con.query(`UPDATE Levels SET Level = ${parseInt(CurrentLevel) + parseInt(1)}, Xp = 0 WHERE ID = ${message.author.id}`, function (err, rows) {
                    if (err) return console.log(err);
                });
                if(`${CurrentLevel + 1}` === 5) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel5ID);
                  if(message.member.roles.has(roleS.id)) return
                    message.member.addRole(roleS)
                }
                if(`${CurrentLevel + 1}` == 10) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel10ID);
                  if(!message.member.roles.has(roleS.id)) {
                   message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 15) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel15ID);
                  if(!message.member.roles.has(roleS.id)){
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 20) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel20ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 25) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel25ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 30) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel30ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 35) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel35ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 40) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel40ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 50) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel50ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                if(`${CurrentLevel + 1}` == 65) {
                  let roleS = message.guild.roles.find(r => r.id === RoleLevel65ID);
                  if(!message.member.roles.has(roleS.id)) {
                    message.member.addRole(roleS)
                  }
                }
                let languageRU = message.guild.roles.find(r => r.id === RoleRuID);
                  let languageEN = message.guild.roles.find(r => r.id === RoleEnID);
                  let language–£–ö = message.guild.roles.find(r => r.id === Role–£–∫ID);
                  if(message.member.roles.has(Role–£–∫ID.id)) {
                          bot.channels.get(ChannelLevelID).send(`**${message.author} –æ—Ç—Ä–∏–º–∞–≤ ${CurrentLevel + 1} —Ä—ñ–≤–µ–Ω—å!**`)
                    return
                  }
                if(message.member.roles.has(languageRU.id)) {
                        bot.channels.get(ChannelLevelID).send(`**${message.author} –ø–æ–ª—É—á–∏–ª ${CurrentLevel + 1} —É—Ä–æ–≤–µ–Ω—å!**`)
                  return
                }
                if(message.member.roles.has(languageEN.id)) {
                bot.channels.get(ChannelLevelID).send(`**${message.author} got ${CurrentLevel + 1} level!**`)
                  return
                }
            }
        }
    })
})
bot.login(process.env.TOKEN);
